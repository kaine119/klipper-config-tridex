######################################################################################################################################################
#  Print Start Routine
#  Feel free to edit how you choose, this is the framework that works with minimal slicer configuration
######################################################################################################################################################

[gcode_macro print_start]
gcode:
    # Pull the printing mode.
    {% set print_mode = params.PRINT_MODE %}
    # Setup a list for the DC_VARS Variables for easy access
    {% set dcvars = printer["gcode_macro DC_VARS"] %}

    # Pull the starting temp for both extruders.
    {% set t0_start_temp = params.T0_STARTING_TEMP|int %}
    {% set t1_start_temp = params.T1_STARTING_TEMP|default(0)|int %}

    # Pull the first extruder used.
    {% set initial_extruder = params.INITIAL_EXTRUDER|default(0)|int %}

    # Pull the starting temp for both extruders.
    {% set t0_start_temp_copy_mirror = params.T0_STARTING_TEMP|int %}
    {% set t1_start_temp_copy_mirror = params.T1_STARTING_TEMP|default(0)|int %}
    
    # Pull the printing temp for both extruders.
    {% set t0_print_temp_copy_mirror = params.T0_PRINTING_TEMP|default(0)|int %}
    {% set t1_print_temp_copy_mirror = params.T1_PRINTING_TEMP|default(0)|int %}

    {% set bed_temp = params.BED|int %}


    #####################################################################
    #  !!! Input shaper for IDEX machines !!!
    #   Input shaper values are assigned in the print_start macro
    #   They are not saved under [input_shaper] in printer.cfg
    #####################################################################
    ##--------------------------------------------------------------------
    SET_DUAL_CARRIAGE CARRIAGE=1
    SET_INPUT_SHAPER SHAPER_TYPE_X=3HUMP_EI SHAPER_FREQ_X=48.2
    SET_INPUT_SHAPER SHAPER_TYPE_Y=3HUMP_EI SHAPER_FREQ_Y=64.6
    SET_DUAL_CARRIAGE CARRIAGE=0
    SET_INPUT_SHAPER SHAPER_TYPE_X=2HUMP_EI SHAPER_FREQ_X=39.6
    SET_INPUT_SHAPER SHAPER_TYPE_Y=2HUMP_EI SHAPER_FREQ_Y=46.8

    ##--------------------------------------------------------------------

    # Ensure second toolhead is not used for homing
    {% if printer.dual_carriage.carriage_0 == "INACTIVE" %} 
      SET_DUAL_CARRIAGE CARRIAGE=0
      ACTIVATE_EXTRUDER EXTRUDER=extruder
    {% endif %}

    M117 Homing

    # Home all
    _CG28 KEEP_PROBE=1

    # Change back to T0 if we haven't already.
    T0

    M117 Heating bed for probing
    STATUS_HEATING_T0
    STATUS_HEATING_T1
    G1 X175 Y175 F9000
    M190 S{bed_temp}

    
    ## Bed probing crap
    # Lock probe so we don't waste time attaching/detaching
    M117 Attaching probe
    PROBE_UNLOCK
    ATTACH_PROBE_LOCK
    # Z-tilt
    M117 Levelling bed
    STATUS_LEVELING
    Z_TILT_ADJUST

    # M117 Z Offset Calib
    # STATUS_CALIBRATING_Z
    # CALIBRATE_Z
    

    {% if (print_mode) == "PRIMARY" %}
        M117 Meshing
        M605 S1 # Set to primary with auto-park
        STATUS_MESHING
        # Run a bed mesh
        BED_MESH_CALIBRATE PROFILE=default 
        
        BED_MESH_PROFILE LOAD=default
    {% endif %}

    M117 Docking probe
    DOCK_PROBE_UNLOCK

    # Start heating the nozzles

    {% if (print_mode) == "COPY" or (print_mode) == "MIRROR" %}
        # Set T1 starting temperature from the parameter.
        {% set t1_start_temp = t1_start_temp_copy_mirror %}
        # Update the DCVARS macro values with the printing temperature values for both extruders (we need these later).
        SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=t0_copy_mirror_temp_start VALUE={t0_start_temp_copy_mirror}
        SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=t1_copy_mirror_temp_start VALUE={t1_start_temp_copy_mirror}
        SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=t0_copy_mirror_temp_print VALUE={t0_print_temp_copy_mirror}
        SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=t1_copy_mirror_temp_print VALUE={t1_print_temp_copy_mirror}
    {% endif %}

    {% if (print_mode) == "COPY" %}
        M117 Heating toolheads
        # Call M605 to setup copy mode
        BED_MESH_CLEAR
        M605 S2
        STATUS_HEATING_T0
        STATUS_HEATING_T1
        M104 S{t0_start_temp} T0 # set T0
        M109 S{t1_start_temp} T1 # wait for T1 to reach temp
        M109 S{t0_start_temp} T0 # wait for T0, in case it hasn't caught up
        
        STATUS_CLEANING_T0
        STATUS_CLEANING_T1
        M117 Line purge
        LINE_PURGE
        M400

        M117 Printing (copy)
        STATUS_PRINTING_BOTH
        
    {% elif (print_mode) == "MIRROR" %}
        # Call M605 to setup mirror mode
        BED_MESH_CLEAR
        M117 Heating toolheads
        STATUS_HEATING_T0
        STATUS_HEATING_T1
        
        M605 S3
        M104 S{t0_start_temp} T0 # set T0
        M109 S{t1_start_temp} T1 # wait for T1 to reach temp
        M109 S{t0_start_temp} T0 # wait for T0, in case it hasn't caught up

        M117 Line purge
        STATUS_CLEANING_T0
        STATUS_CLEANING_T1
        LINE_PURGE
        M400

        M117 Printing (mirror)
        STATUS_PRINTING_BOTH
    {% else %} # PRIMARY
        M117 Heating toolheads
        G0 X175 Y175

        # If we're printing with T1 first, center it.
        {% if initial_extruder == 1 %}
          T1
        {% endif %}
        
        # Purge only the extruders we want to print with.
        {% if t1_start_temp > 160 %}                                # If we are using T1 this print, start with T1, because T0 will most likely be the first to print
            STATUS_HEATING_T1
            M104 S{t1_start_temp} T1                                # make sure to reset the temp to starting temp (sets to ooze prevention temp if being used)
        {% else %}
            SET_LOGO_IDLE T1=1
        {% endif %}
        
        {% if t0_start_temp > 160 %}
            STATUS_HEATING_T0
            M109 S{t0_start_temp} T0                                # Set and wait for the requested temp
        {% endif %}

        {% if t1_start_temp > 160 %}
          M109 S{t1_start_temp} T1 # wait for T1, in case it hasn't caught up
        {% endif %}
        
        M117 Line purge
        {% if initial_extruder == 1 %}
          STATUS_CLEANING_T1
        {% else %}
          STATUS_CLEANING_T0
        {% endif %}
        
        LINE_PURGE

        M400

        M117 Printing (primary)
        {% if initial_extruder == 1 %}
          STATUS_PRINTING_T1
        {% else %}
          STATUS_PRINTING_T0
        {% endif %}
    {% endif %}

    

#####################################################################
#  Print End
#####################################################################

[gcode_macro print_end]
#   Use PRINT_END for the slicer ending script
gcode:
    {% set y_park = printer.configfile.config.stepper_y.position_max|float - 10 %}
    {% set z_safe = printer.configfile.config.stepper_z.position_max|int - printer.gcode_move.position.z|int %}
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    # G0 E-10.0 F3600                 ; retract 10mm to evacuate the extruder
    G0 E-1.2 F3600                
    M104 S0 T0                     ; turn off T0 hotend
    M104 S0 T1                     ; turn off T1 hotend
    M140 S0                        ; turn off bed
    M106 S0 P0                     ; turn off T0 part fan
    M106 S0 P1                     ; turn off T1 part fan
    {% if (z_safe) > 10 %}         ; Check to see if it is safe to move the bed down 10mm
      G91                          ; Relative positioning
      G0 Z10 F3000                 ; Move bed if it is safe to do so
      G90                          ; Absolute positioning
    {% endif %}
    G0 Y{y_park} F12000            ; park nozzle at rear
    STATUS_PART_READY
    M117 Print Complete
    # SET_FAN_SPEED FAN=BedFans SPEED=0.2 ; turn on bed fans to 20% to speed cooling of the build plate
    RESPOND MSG="T1 X offset is at {dcvars.offset_x}"
    RESPOND MSG="T1 Y offset is at {dcvars.offset_y}"
    RESPOND MSG="Please check IDEX_mode.cfg and update if offsets were changed during the print."


###################################################################
# Reset dual carriage activation on cancelled prints
###################################################################
[gcode_macro reset_dc]
gcode:
    # TODO: way too hacky
    PROBE_UNLOCK
    T0
    T1
    T0